//
// Tag list
// --------------------------------------------------

.tag.list {
  .icon-tag {
    &:not([class*="color"]) {
      .color {
        color: $icon-tag-color;

        .nested-focus & {
          color: $icon-tag-nested-focus-color;
        }

        .nested-focus.has-active & {
          color: $icon-tag-color;
        }
      }

      .border {
        color: $icon-tag-border;

        .nested-focus & {
          color: $icon-tag-nested-focus-border;
        }

        .nested-focus.has-active & {
          color: $icon-tag-border;
        }
      }
    }
  }

  #sidebar & {
    .active {
      background: $tag-list-active-bg;

      .icon-tag:not([class*="color"]) {
        .color {
          color: $tag-list-active-bg;
        }

        .border {
          color: $tag-list-active-border;
        }
      }

      &:focus {
        background: $tag-list-focus-bg;
        color: $tag-list-focus-color;

        .icon-tag {
          &:not([class*="color"]) {
            .color {
              color: $tag-list-focus-bg;
            }
          }

          .border {
            color: $tag-list-focus-color;
          }
        }
      }
    }
  }

  .panel & {
    flex: 1 1 0;
    overflow-y: scroll;
    padding: $space-min 0 0;
    position: relative;

    li {
      display: flex;
      align-items: center;
      height: $line-height-large;
      padding: 0 $default-padding-horizontal;

      &.mixed {
        color: $mixed-color;

        .icon-tag {
          opacity: 0.5;
        }

        &:focus {
          .icon-pluscircles {
            display: block;
          }

          .icon-tag {
            opacity: 1;
          }
        }
      }

      &:focus {
        background: $tag-list-focus-bg;

        &,
        .icon {
          color: $tag-list-focus-color;
        }

        .icon.icon-tag { // Needs specifity to override nested focus
          &:not([class*="color"]) {
            .color {
              color: $tag-list-focus-bg;
            }
          }

          .border {
            color: $tag-list-focus-color;
          }
        }
      }

      .icon-pluscircles {
        display: none;
      }
    }

    .icon-tag {
      margin-right: $space-xs;
    }

    .name {
      margin-right: auto;

      & + .btn-icon {
        margin-left: $space-min - $shim;
      }
    }
  }
}

.add-tag-container {
  flex: 0 0 auto;
  padding: ($space-min + $space-min / 2) $default-padding-horizontal 2px;

  .editable-control {
    width: 100%;
    height: $input-height-base;
    background: $add-tag-default-bg;
    cursor: default;
    border: 1px solid $add-tag-border-color; // Reset to form-control, tweak border color for panel bg
    margin: 0; // Reset to form-control
    padding: 0 $padding-base-horizontal; // Reset to form-control

    .nested-focus & {
      background: $add-tag-nested-focus-bg;
      border-color: $add-tag-nested-focus-border-color;
    }

    .nested-focus.has-active & {
      background: $add-tag-default-bg;
      border-color: $add-tag-border-color;

      @include form-control-focus; // sass-lint:disable-line mixins-before-declarations
    }

    &::-webkit-input-placeholder {
      color: $add-tag-placeholder-color-default;
      position: relative;
      left: 50%;
      transform: translateX(-50%);
      max-width: max-content;
      transition:
        left $add-tag-transition,
        transform $add-tag-transition,
        color $add-tag-transition;
    }

    &:focus {
      cursor: auto;
      background: $add-tag-focus-bg;
      border-color: $input-color-focus; // Reset to form-control
      box-shadow: 0 0 0 2px $input-color-focus, 0 0 0 2px $panel-bg;

      &::-webkit-input-placeholder {
        left: 0;
        transform: translateX(0);
        color: $input-color-placeholder;
      }
    }
  }
}
